{
  "swagger": "2.0",
  "info": {
    "description": "",
    "version": "1.0.0",
    "title": "Swagger Test API",
    "termsOfService": "http://swagger.io/terms/",
    "contact": {
      "email": "ben-hx@web.de"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "host": "localhost:8080",
  "basePath": "/v1",
  "tags": [
    {
      "name": "user",
      "description": "Operations about user",
      "externalDocs": {
        "description": "Find out more about our Users",
        "url": ""
      }
    }
  ],
  "schemes": [
    "http"
  ],
  "paths": {
    "/user/{user_id}/activate": {
      "post": {
        "tags": [
          "user",
          "activation"
        ],
        "summary": "Activate a unregistered user (only for user-role = 'admin')",
        "description": "",
        "operationId": "activateUser",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "description": "ID of the user that needs to be activated",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Activated User response",
            "schema": {
              "$ref": "./definitions/user/UserResponse.json"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "./definitions/error/ErrorResponse.json"
            }
          }
        },
        "x-swagger-router-controller": "user-activation-controller"
      }
    },
    "/user/inactive": {
      "get": {
        "tags": [
          "user",
          "activation"
        ],
        "summary": "Get all inaktive users (only for user-role = 'admin')",
        "description": "",
        "operationId": "activateUser",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page to filter by",
            "type": "integer"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "User-count-limit per page to filter by",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Inactive Users response",
            "schema": {
              "$ref": "./definitions/user/UsersResponse.json"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "./definitions/error/ErrorResponse.json"
            }
          }
        },
        "x-swagger-router-controller": "user-activation-controller"
      }
    },
    "/register": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Register a new user",
        "description": "",
        "operationId": "register",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Created user object",
            "required": true,
            "schema": {
              "$ref": "./definitions/user/NewUser.json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User response",
            "schema": {
              "$ref": "./definitions/user/UserResponse.json"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "./definitions/error/ErrorResponse.json"
            }
          }
        },
        "x-swagger-router-controller": "register-controller"
      }
    },
    "/changepassword": {
      "post": {
        "tags": [
          "change password"
        ],
        "description": "User can change his password",
        "operationId": "changePassword",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "user_auth": []
          }
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Old and new Password",
            "required": true,
            "schema": {
              "$ref": "./definitions/user/ChangePassword.json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User response",
            "schema": {
              "$ref": "./definitions/user/UserResponse.json"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "./definitions/error/ErrorResponse.json"
            }
          }
        },
        "x-swagger-router-controller": "user-controller"
      }
    },
    "/me": {
      "get": {
        "tags": [
          "user",
          "me"
        ],
        "description": "get the authorized user",
        "operationId": "getMe",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "user_auth": []
          }
        ],
        "responses": {
          "200": {
            "description": "User response",
            "schema": {
              "$ref": "./definitions/user/UserResponse.json"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "./definitions/error/ErrorResponse.json"
            }
          }
        },
        "x-swagger-router-controller": "user-controller"
      }
    },
    "/movies": {
      "post": {
        "tags": [
          "movie"
        ],
        "summary": "Post a new Movie",
        "description": "",
        "operationId": "createMovie",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "user_auth": []
          }
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Created movie object",
            "required": true,
            "schema": {
              "$ref": "./definitions/movie/NewMovie.json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Movie response",
            "schema": {
              "$ref": "./definitions/movie/MovieResponse.json"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "./definitions/error/ErrorResponse.json"
            }
          }
        },
        "x-swagger-router-controller": "movie-controller"
      },
      "get": {
        "tags": [
          "movie"
        ],
        "summary": "Get all Movies",
        "description": "",
        "operationId": "getMovies",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "user_auth": []
          }
        ],
        "parameters": [
          {
            "name": "title",
            "in": "query",
            "description": "Titles to filter by",
            "type": "string"
          },
          {
            "name": "actors",
            "in": "query",
            "description": "Actors to filter by",
            "type": "string"
          },
          {
            "name": "years",
            "in": "query",
            "description": "Years to filter by",
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "genres",
            "in": "query",
            "description": "Genres to filter by",
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "userCreatedIds",
            "in": "query",
            "description": "User id's to filter by",
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page to filter by",
            "type": "integer"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Movie-count-limit per page to filter by",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Movies response",
            "schema": {
              "$ref": "./definitions/movie/MoviesResponse.json"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "./definitions/error/ErrorResponse.json"
            }
          }
        },
        "x-swagger-router-controller": "movie-controller"
      }
    },
    "/movies/{movie_id}": {
      "get": {
        "tags": [
          "movie"
        ],
        "summary": "Get a Movie",
        "description": "",
        "operationId": "getMovie",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "user_auth": []
          }
        ],
        "parameters": [
          {
            "name": "movie_id",
            "in": "path",
            "description": "ID of the movie that needs to be returned",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Movie response",
            "schema": {
              "$ref": "./definitions/movie/MovieResponse.json"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "./definitions/error/ErrorResponse.json"
            }
          }
        },
        "x-swagger-router-controller": "movie-controller"
      },
      "put": {
        "tags": [
          "movie"
        ],
        "summary": "Update a Movie",
        "description": "",
        "operationId": "updateMovie",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "user_auth": []
          }
        ],
        "parameters": [
          {
            "name": "movie_id",
            "in": "path",
            "description": "ID of the movie that needs to be updated",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Updated movie object",
            "required": true,
            "schema": {
              "$ref": "./definitions/movie/UpdateMovie.json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Movie response",
            "schema": {
              "$ref": "./definitions/movie/MovieResponse.json"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "./definitions/error/ErrorResponse.json"
            }
          }
        },
        "x-swagger-router-controller": "movie-controller"
      },
      "delete": {
        "tags": [
          "movie"
        ],
        "summary": "Delete a Movie",
        "description": "",
        "operationId": "deleteMovie",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "user_auth": []
          }
        ],
        "parameters": [
          {
            "name": "movie_id",
            "in": "path",
            "description": "ID of the movie",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Movie response",
            "schema": {
              "$ref": "./definitions/movie/MovieResponse.json"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "./definitions/error/ErrorResponse.json"
            }
          }
        },
        "x-swagger-router-controller": "movie-controller"
      }
    },
    "/movies/{movie_id}/rating": {
      "get": {
        "tags": [
          "movie",
          "rating"
        ],
        "summary": "Get the rating of a Movie",
        "description": "",
        "operationId": "getMovieRating",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "user_auth": []
          }
        ],
        "parameters": [
          {
            "name": "movie_id",
            "in": "path",
            "description": "ID of the movie",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Movie Rating response",
            "schema": {
              "$ref": "./definitions/movie/MovieRatingResponse.json"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "./definitions/error/ErrorResponse.json"
            }
          }
        },
        "x-swagger-router-controller": "movie-rating-controller"
      },
      "put": {
        "tags": [
          "movie",
          "rating"
        ],
        "summary": "Set a Movies rating",
        "description": "",
        "operationId": "setMovieRating",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "user_auth": []
          }
        ],
        "parameters": [
          {
            "name": "movie_id",
            "in": "path",
            "description": "ID of the movie",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Updated movie object",
            "required": true,
            "schema": {
              "$ref": "./definitions/movie/UpdateMovieRating.json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Movie Rating response",
            "schema": {
              "$ref": "./definitions/movie/MovieRatingResponse.json"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "./definitions/error/ErrorResponse.json"
            }
          }
        },
        "x-swagger-router-controller": "movie-rating-controller"
      }
    },
    "/movies/{movie_id}/watched": {
      "get": {
        "tags": [
          "movie",
          "watched"
        ],
        "summary": "Get the users who have seen the Movie",
        "description": "",
        "operationId": "getMovieWatched",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "user_auth": []
          }
        ],
        "parameters": [
          {
            "name": "movie_id",
            "in": "path",
            "description": "ID of the movie",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Movie Watched response",
            "schema": {
              "$ref": "./definitions/movie/MovieWatchedResponse.json"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "./definitions/error/ErrorResponse.json"
            }
          }
        },
        "x-swagger-router-controller": "movie-watched-controller"
      },
      "put": {
        "tags": [
          "movie",
          "watched"
        ],
        "summary": "Set a Movie watched",
        "description": "",
        "operationId": "setMovieWatched",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "user_auth": []
          }
        ],
        "parameters": [
          {
            "name": "movie_id",
            "in": "path",
            "description": "ID of the movie",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Movie Watched response",
            "schema": {
              "$ref": "./definitions/movie/MovieWatchedResponse.json"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "./definitions/error/ErrorResponse.json"
            }
          }
        },
        "x-swagger-router-controller": "movie-watched-controller"
      }
    },
    "/movies/{movie_id}/unwatched": {
      "put": {
        "tags": [
          "movie"
        ],
        "summary": "Set a Movie unwatched",
        "description": "",
        "operationId": "setMovieUnwatched",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "user_auth": []
          }
        ],
        "parameters": [
          {
            "name": "movie_id",
            "in": "path",
            "description": "ID of the movie",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Movie Watched response",
            "schema": {
              "$ref": "./definitions/movie/MovieWatchedResponse.json"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "./definitions/error/ErrorResponse.json"
            }
          }
        },
        "x-swagger-router-controller": "movie-watched-controller"
      }
    },
    "/movies/genres": {
      "get": {
        "tags": [
          "movie",
          "genres"
        ],
        "summary": "Get the genres of all movies",
        "description": "",
        "operationId": "getGenres",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "user_auth": []
          }
        ],
        "parameters": [
        ],
        "responses": {
          "200": {
            "description": "Genres response",
            "schema": {
              "$ref": "./definitions/movie-property/MoviePropertyResponse.json"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "./definitions/error/ErrorResponse.json"
            }
          }
        },
        "x-swagger-router-controller": "movie-property-controller"
      }
    },
    "/movies/directors": {
      "get": {
        "tags": [
          "movie",
          "directors"
        ],
        "summary": "Get the directors of all movies",
        "description": "",
        "operationId": "getDirectors",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "user_auth": []
          }
        ],
        "parameters": [
        ],
        "responses": {
          "200": {
            "description": "Directors response",
            "schema": {
              "$ref": "./definitions/movie-property/MoviePropertyResponse.json"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "./definitions/error/ErrorResponse.json"
            }
          }
        },
        "x-swagger-router-controller": "movie-property-controller"
      }
    },
    "/movies/writers": {
      "get": {
        "tags": [
          "movie",
          "writers"
        ],
        "summary": "Get the writers of all movies",
        "description": "",
        "operationId": "getWriters",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "user_auth": []
          }
        ],
        "parameters": [
        ],
        "responses": {
          "200": {
            "description": "Writers response",
            "schema": {
              "$ref": "./definitions/movie-property/MoviePropertyResponse.json"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "./definitions/error/ErrorResponse.json"
            }
          }
        },
        "x-swagger-router-controller": "movie-property-controller"
      }
    },
    "/movies/actors": {
      "get": {
        "tags": [
          "movie",
          "actors"
        ],
        "summary": "Get the actors of all movies",
        "description": "",
        "operationId": "getActors",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "user_auth": []
          }
        ],
        "parameters": [
        ],
        "responses": {
          "200": {
            "description": "Actors response",
            "schema": {
              "$ref": "./definitions/movie-property/MoviePropertyResponse.json"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "./definitions/error/ErrorResponse.json"
            }
          }
        },
        "x-swagger-router-controller": "movie-property-controller"
      }
    },
    "/movies/languages": {
      "get": {
        "tags": [
          "movie",
          "languages"
        ],
        "summary": "Get the languages of all movies",
        "description": "",
        "operationId": "getLanguages",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "user_auth": []
          }
        ],
        "parameters": [
        ],
        "responses": {
          "200": {
            "description": "Languages response",
            "schema": {
              "$ref": "./definitions/movie-property/MoviePropertyResponse.json"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "./definitions/error/ErrorResponse.json"
            }
          }
        },
        "x-swagger-router-controller": "movie-property-controller"
      }
    }
  },
  "securityDefinitions": {
    "user_auth": {
      "type": "basic",
      "description": "HTTP Basic Authentication."
    },
    "api_key": {
      "type": "apiKey",
      "name": "api_key",
      "in": "header"
    }
  },
  "definitions": {
    "$ref": "./definitions/definitions.json"
  },
  "externalDocs": {
    "description": "Find out more about it!",
    "url": ""
  }
}